[{"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\index.js":"1","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\Login.jsx":"2","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\Home.jsx":"3","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App.js":"4","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\Header.jsx":"5","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\Main.jsx":"6","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\Footer.jsx":"7","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\Content.jsx":"8","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\Nav.jsx":"9","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\Logo.jsx":"10","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\content_components\\biochem_molbio\\BiochemMolbioNotes.jsx":"11","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\content_components\\human_devgen\\HumanDevGenNotes.jsx":"12","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\content_components\\bio_of_cells\\BioOfCellsNotes.jsx":"13","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\content_components\\bio_of_cells\\BioOfCellsIndex.jsx":"14","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\content_components\\human_devgen\\HumanDevGenIndex.jsx":"15","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\content_components\\biochem_molbio\\BiochemMolbioIndex.jsx":"16","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\content_components\\home_content\\HomeContent.jsx":"17","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\MenuAside.jsx":"18","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\TodoAside.jsx":"19"},{"size":459,"mtime":1611739825649,"results":"20","hashOfConfig":"21"},{"size":9276,"mtime":1611718591301,"results":"22","hashOfConfig":"21"},{"size":1611,"mtime":1611723018488,"results":"23","hashOfConfig":"21"},{"size":367,"mtime":1611708172127,"results":"24","hashOfConfig":"21"},{"size":431,"mtime":1611711857162,"results":"25","hashOfConfig":"21"},{"size":623,"mtime":1611748664957,"results":"26","hashOfConfig":"21"},{"size":349,"mtime":1611621736035,"results":"27","hashOfConfig":"21"},{"size":524,"mtime":1611748517312,"results":"28","hashOfConfig":"21"},{"size":1205,"mtime":1611748124184,"results":"29","hashOfConfig":"21"},{"size":170,"mtime":1611717691244,"results":"30","hashOfConfig":"21"},{"size":6924,"mtime":1611664048479,"results":"31","hashOfConfig":"21"},{"size":6700,"mtime":1611566350968,"results":"32","hashOfConfig":"21"},{"size":7135,"mtime":1611603436040,"results":"33","hashOfConfig":"21"},{"size":969,"mtime":1611659275071,"results":"34","hashOfConfig":"21"},{"size":891,"mtime":1611658349912,"results":"35","hashOfConfig":"21"},{"size":1049,"mtime":1611746329682,"results":"36","hashOfConfig":"21"},{"size":624,"mtime":1611749761811,"results":"37","hashOfConfig":"21"},{"size":3030,"mtime":1611748093591,"results":"38","hashOfConfig":"21"},{"size":8788,"mtime":1611744193172,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9ud5aj",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\index.js",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\Login.jsx",[],["85","86"],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\Home.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App.js",["87"],"import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport Home from \"./Home\";\r\n\r\nfunction AppRouter(props) {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home username={props.username} />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\nexport default AppRouter;\r\n","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\Header.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\Main.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\Footer.jsx",["88","89"],"import React, { useEffect, useState } from \"react\";\r\nimport \"../css/footer.css\";\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <footer id=\"footer_app\">\r\n      <div id=\"footer_app_container\">\r\n        <h4>Â©2021 Rudy Hamame</h4>\r\n        <h4 id=\"date\">{String(props.date_now)}</h4>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\Content.jsx",["90","91","92","93"],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\Nav.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\Logo.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\content_components\\biochem_molbio\\BiochemMolbioNotes.jsx",["94","95","96"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst BiochemMolbio = () => {\r\n  const fetchData = () => {\r\n    const url = \"https://backendstep1.herokuapp.com/api/BiochemMolbio\";\r\n    let req = new Request(url, { method: \"GET\", mode: \"cors\" });\r\n    fetch(req)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"BAD HTTP!\");\r\n        }\r\n      })\r\n\r\n      .then((jsonData) => {\r\n        let ol = document.getElementById(\"notes\");\r\n        ol.innerHTML = \"\";\r\n        let df = new DocumentFragment();\r\n        for (var i = 0; i < jsonData.length; i++) {\r\n          let li = document.createElement(\"li\");\r\n          let p = document.createElement(\"p\");\r\n          let divIcons = document.createElement(\"div\");\r\n          divIcons.setAttribute(\"id\", \"div_icons\");\r\n          let deleteIcon = document.createElement(\"i\");\r\n          let editIcon = document.createElement(\"i\");\r\n          editIcon.setAttribute(\"class\", \"fas fa-edit\");\r\n          editIcon.setAttribute(\"id\", \"BiochemMolbioNote\" + i);\r\n          deleteIcon.setAttribute(\"class\", \"fas fa-eraser\");\r\n          deleteIcon.setAttribute(\"id\", \"BiochemMolbioNote\" + i);\r\n          editIcon.addEventListener(\"click\", () =>\r\n            editList(editIcon.getAttribute(\"id\", \"BiochemMolbioNote\" + i))\r\n          );\r\n          deleteIcon.addEventListener(\"click\", () =>\r\n            deleteNote(deleteIcon.getAttribute(\"id\", \"BiochemMolbioNote\" + i))\r\n          );\r\n          li.setAttribute(\"id\", String(jsonData[i]._id));\r\n          p.textContent = jsonData[i].notes;\r\n          divIcons.appendChild(deleteIcon);\r\n          divIcons.appendChild(editIcon);\r\n          li.appendChild(divIcons);\r\n          li.appendChild(p);\r\n          let line = document.createElement(\"hr\");\r\n          df.appendChild(li);\r\n          df.appendChild(line);\r\n        }\r\n        ol.appendChild(df);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error\", err.message);\r\n      });\r\n  };\r\n\r\n  function deleteNote(id) {\r\n    let targeNoteID = document.getElementById(id).parentElement.parentElement\r\n      .id;\r\n    const url =\r\n      \"https://backendstep1.herokuapp.com/api/BiochemMolbio/\" + targeNoteID;\r\n    let req = new Request(url, { method: \"DELETE\", mode: \"cors\" });\r\n    fetch(req)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"BAD HTTP!\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        setCounter(counter + 1);\r\n      });\r\n  }\r\n\r\n  function addList(event) {\r\n    event.preventDefault();\r\n    let newCase = document.getElementById(\"input_area\");\r\n    let url = \"https://backendstep1.herokuapp.com/api/BiochemMolbio\";\r\n    let options = {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: \"follow\", // manual, *follow, error\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify({ notes: newCase.value }), // body data type must match \"Content-Type\" header\r\n    };\r\n    newCase.value = \"\";\r\n    let req = new Request(url, options);\r\n\r\n    fetch(req)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"bad Http\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        setCounter(counter + 1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error:\", err.message);\r\n      });\r\n  }\r\n\r\n  function editList(id) {\r\n    let targeNoteID = document.getElementById(id).parentElement.parentElement\r\n      .id;\r\n    let newCase = document.getElementById(\"input_area\");\r\n    let url =\r\n      \"https://backendstep1.herokuapp.com/api/BiochemMolbio/\" + targeNoteID;\r\n    let options = {\r\n      method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: \"follow\", // manual, *follow, error\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify({ notes: newCase.value }), // body data type must match \"Content-Type\" header\r\n    };\r\n    newCase.value = \"\";\r\n\r\n    let req = new Request(url, options);\r\n\r\n    fetch(req)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"bad Http\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        setCounter(counter + 1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error:\", err.message);\r\n      });\r\n  }\r\n\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [counter]);\r\n\r\n  const closeForm = () => {\r\n    let textarea_div = document.getElementById(\"textarea_div\");\r\n    let close_icon = document.getElementById(\"close_icon\");\r\n    let open_icon = document.getElementById(\"open_icon\");\r\n\r\n    textarea_div.style.display = \"none\";\r\n    close_icon.style.display = \"none\";\r\n    open_icon.style.display = \"inline\";\r\n  };\r\n  const openForm = () => {\r\n    let textarea_div = document.getElementById(\"textarea_div\");\r\n    let close_icon = document.getElementById(\"close_icon\");\r\n    let open_icon = document.getElementById(\"open_icon\");\r\n\r\n    textarea_div.style.display = \"initial\";\r\n    close_icon.style.display = \"initial\";\r\n    open_icon.style.display = \"none\";\r\n  };\r\n  return (\r\n    <div id=\"contentView_div\" className=\"fc\" style={{ flexGrow: 1 }}>\r\n      <ol id=\"notes\"></ol>\r\n      <div id=\"newInput_div\">\r\n        <div id=\"form_buttons\">\r\n          <i id=\"close_icon\" onClick={closeForm} class=\"fas fa-times\"></i>\r\n          <i id=\"open_icon\" onClick={openForm} class=\"fas fa-plus\"></i>\r\n        </div>\r\n        <div id=\"textarea_div\" className=\"fr\" style={{ display: \"none\" }}>\r\n          <textarea id=\"input_area\" type=\"text\" />\r\n          <i\r\n            id=\"submit_icon\"\r\n            onClick={addList}\r\n            class=\"fas fa-paper-plane\"\r\n            style={{ color: \"var(--white)\" }}\r\n          ></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BiochemMolbio;\r\n","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\content_components\\human_devgen\\HumanDevGenNotes.jsx",["97","98","99"],"import React, { useEffect, useState } from \"react\";\r\nconst HumanDevGen = () => {\r\n  const fetchData = () => {\r\n    const url = \"https://backendstep1.herokuapp.com/api/HumanDevGen\";\r\n    let req = new Request(url, { method: \"GET\", mode: \"cors\" });\r\n    fetch(req)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"BAD HTTP!\");\r\n        }\r\n      })\r\n\r\n      .then((jsonData) => {\r\n        let ol = document.getElementById(\"notes\");\r\n        ol.innerHTML = \"\";\r\n        let df = new DocumentFragment();\r\n        for (var i = 0; i < jsonData.length; i++) {\r\n          let li = document.createElement(\"li\");\r\n          let p = document.createElement(\"p\");\r\n          let divIcons = document.createElement(\"div\");\r\n          divIcons.setAttribute(\"id\", \"div_icons\");\r\n          let deleteIcon = document.createElement(\"i\");\r\n          let editIcon = document.createElement(\"i\");\r\n          editIcon.setAttribute(\"class\", \"fas fa-edit\");\r\n          editIcon.setAttribute(\"id\", \"BiochemMolbioNote\" + i);\r\n          deleteIcon.setAttribute(\"class\", \"fas fa-eraser\");\r\n          deleteIcon.setAttribute(\"id\", \"BiochemMolbioNote\" + i);\r\n          editIcon.addEventListener(\"click\", () =>\r\n            editList(editIcon.getAttribute(\"id\", \"BiochemMolbioNote\" + i))\r\n          );\r\n          deleteIcon.addEventListener(\"click\", () =>\r\n            deleteNote(deleteIcon.getAttribute(\"id\", \"BiochemMolbioNote\" + i))\r\n          );\r\n          li.setAttribute(\"id\", String(jsonData[i]._id));\r\n          p.textContent = jsonData[i].notes;\r\n          divIcons.appendChild(deleteIcon);\r\n          divIcons.appendChild(editIcon);\r\n          li.appendChild(divIcons);\r\n          li.appendChild(p);\r\n          let line = document.createElement(\"hr\");\r\n          df.appendChild(li);\r\n          df.appendChild(line);\r\n        }\r\n        ol.appendChild(df);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error\", err.message);\r\n      });\r\n  };\r\n\r\n  function deleteNote(id) {\r\n    let targeNoteID = document.getElementById(id).parentElement.parentElement\r\n      .id;\r\n    const url =\r\n      \"https://backendstep1.herokuapp.com/api/HumanDevGen/\" + targeNoteID;\r\n    let req = new Request(url, { method: \"DELETE\", mode: \"cors\" });\r\n    fetch(req)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"BAD HTTP!\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        setCounter(counter + 1);\r\n      });\r\n  }\r\n\r\n  function addList(event) {\r\n    event.preventDefault();\r\n    let newCase = document.getElementById(\"input_area\");\r\n    let url = \"https://backendstep1.herokuapp.com/api/HumanDevGen\";\r\n    let options = {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: \"follow\", // manual, *follow, error\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify({ notes: newCase.value }), // body data type must match \"Content-Type\" header\r\n    };\r\n    newCase.value = \"\";\r\n    let req = new Request(url, options);\r\n\r\n    fetch(req)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"bad Http\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        setCounter(counter + 1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error:\", err.message);\r\n      });\r\n  }\r\n\r\n  function editList(id) {\r\n    let targeNoteID = document.getElementById(id).parentElement.parentElement\r\n      .id;\r\n    let newCase = document.getElementById(\"input_area\");\r\n    let url =\r\n      \"https://backendstep1.herokuapp.com/api/HumanDevGen/\" + targeNoteID;\r\n    let options = {\r\n      method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: \"follow\", // manual, *follow, error\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify({ notes: newCase.value }), // body data type must match \"Content-Type\" header\r\n    };\r\n    newCase.value = \"\";\r\n\r\n    let req = new Request(url, options);\r\n\r\n    fetch(req)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"bad Http\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        setCounter(counter + 1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error:\", err.message);\r\n      });\r\n  }\r\n\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [counter]);\r\n\r\n  const closeForm = () => {\r\n    let input_form = document.getElementById(\"input_form\");\r\n    let close_icon = document.getElementById(\"close_icon\");\r\n    let open_icon = document.getElementById(\"open_icon\");\r\n\r\n    input_form.style.display = \"none\";\r\n    close_icon.style.display = \"none\";\r\n    open_icon.style.display = \"inline\";\r\n  };\r\n  const openForm = () => {\r\n    let input_form = document.getElementById(\"input_form\");\r\n    let close_icon = document.getElementById(\"close_icon\");\r\n    let open_icon = document.getElementById(\"open_icon\");\r\n\r\n    input_form.style.display = \"initial\";\r\n    close_icon.style.display = \"initial\";\r\n    open_icon.style.display = \"none\";\r\n  };\r\n  return (\r\n    <div id=\"contentView_div\">\r\n      <ol id=\"notes\"></ol>\r\n      <div id=\"newInput_div\">\r\n        <div id=\"form_buttons\">\r\n          <i id=\"close_icon\" onClick={closeForm} class=\"fas fa-times\"></i>\r\n          <i id=\"open_icon\" onClick={openForm} class=\"fas fa-plus\"></i>\r\n        </div>\r\n        <form id=\"input_form\" action=\"\">\r\n          <textarea id=\"input_area\" type=\"text\" />\r\n          <input type=\"submit\" onClick={addList} />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HumanDevGen;\r\n","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\content_components\\bio_of_cells\\BioOfCellsNotes.jsx",["100","101","102"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst BioOfCells = () => {\r\n  //.........................GET...................................\r\n  const getData = () => {\r\n    const url = \"https://backendstep1.herokuapp.com/api/BioOfCells\";\r\n    let req = new Request(url, { method: \"GET\", mode: \"cors\" });\r\n    fetch(req)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"BAD HTTP!\");\r\n        }\r\n      })\r\n\r\n      .then((jsonData) => {\r\n        let ol = document.getElementById(\"notes\");\r\n        ol.innerHTML = \"\";\r\n        let df = new DocumentFragment();\r\n        for (var i = 0; i < jsonData.length; i++) {\r\n          let li = document.createElement(\"li\");\r\n          let p = document.createElement(\"p\");\r\n          let divIcons = document.createElement(\"div\");\r\n          divIcons.setAttribute(\"id\", \"div_icons\");\r\n          let deleteIcon = document.createElement(\"i\");\r\n          let editIcon = document.createElement(\"i\");\r\n          editIcon.setAttribute(\"class\", \"fas fa-edit\");\r\n          editIcon.setAttribute(\"id\", \"BiochemMolbioNote\" + i);\r\n          deleteIcon.setAttribute(\"class\", \"fas fa-eraser\");\r\n          deleteIcon.setAttribute(\"id\", \"BiochemMolbioNote\" + i);\r\n          editIcon.addEventListener(\"click\", () =>\r\n            putData(editIcon.getAttribute(\"id\", \"BiochemMolbioNote\" + i))\r\n          );\r\n          deleteIcon.addEventListener(\"click\", () =>\r\n            deleteData(deleteIcon.getAttribute(\"id\", \"BiochemMolbioNote\" + i))\r\n          );\r\n          li.setAttribute(\"id\", String(jsonData[i]._id));\r\n          p.textContent = jsonData[i].notes;\r\n          divIcons.appendChild(deleteIcon);\r\n          divIcons.appendChild(editIcon);\r\n          li.appendChild(divIcons);\r\n          li.appendChild(p);\r\n          let line = document.createElement(\"hr\");\r\n          df.appendChild(li);\r\n          df.appendChild(line);\r\n        }\r\n        ol.appendChild(df);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error\", err.message);\r\n      });\r\n  };\r\n  //.........................DELETE...................................\r\n  function deleteData(id) {\r\n    let targeNoteID = document.getElementById(id).parentElement.parentElement\r\n      .id;\r\n    const url =\r\n      \"https://backendstep1.herokuapp.com/api/BioOfCells/\" + targeNoteID;\r\n    let req = new Request(url, { method: \"DELETE\", mode: \"cors\" });\r\n    fetch(req)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"BAD HTTP!\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        setCounter(counter + 1);\r\n      });\r\n  }\r\n\r\n  //.........................POST...................................\r\n\r\n  function postData(event) {\r\n    event.preventDefault();\r\n    let newCase = document.getElementById(\"input_area\");\r\n    let url = \"https://backendstep1.herokuapp.com/api/BioOfCells\";\r\n    let options = {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: \"follow\", // manual, *follow, error\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify({ notes: newCase.value }), // body data type must match \"Content-Type\" header\r\n    };\r\n    newCase.value = \"\";\r\n    let req = new Request(url, options);\r\n\r\n    fetch(req)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"bad Http\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        setCounter(counter + 1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error:\", err.message);\r\n      });\r\n  }\r\n  //.........................PUT...................................\r\n  function putData(id) {\r\n    let targeNoteID = document.getElementById(id).parentElement.parentElement\r\n      .id;\r\n    let newCase = document.getElementById(\"input_area\");\r\n    let url =\r\n      \"https://backendstep1.herokuapp.com/api/BioOfCells/\" + targeNoteID;\r\n    let options = {\r\n      method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: \"follow\", // manual, *follow, error\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify({ notes: newCase.value }), // body data type must match \"Content-Type\" header\r\n    };\r\n    newCase.value = \"\";\r\n\r\n    let req = new Request(url, options);\r\n\r\n    fetch(req)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"bad Http\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        setCounter(counter + 1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error:\", err.message);\r\n      });\r\n  }\r\n\r\n  //...............CONTROL STATE...................\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [counter]);\r\n\r\n  //...............Functions...................\r\n  const closeForm = () => {\r\n    let input_form = document.getElementById(\"input_form\");\r\n    let close_icon = document.getElementById(\"close_icon\");\r\n    let open_icon = document.getElementById(\"open_icon\");\r\n\r\n    input_form.style.display = \"none\";\r\n    close_icon.style.display = \"none\";\r\n    open_icon.style.display = \"inline\";\r\n  };\r\n  const openForm = () => {\r\n    let input_form = document.getElementById(\"input_form\");\r\n    let close_icon = document.getElementById(\"close_icon\");\r\n    let open_icon = document.getElementById(\"open_icon\");\r\n\r\n    input_form.style.display = \"inline\";\r\n    close_icon.style.display = \"inline\";\r\n    open_icon.style.display = \"none\";\r\n  };\r\n  //....................RETURN.................................\r\n  return (\r\n    <div id=\"contentView_div\">\r\n      <ol id=\"notes\"></ol>\r\n      <div id=\"newInput_div\">\r\n        <div id=\"form_buttons\">\r\n          <i id=\"close_icon\" onClick={closeForm} class=\"fas fa-times\"></i>\r\n          <i id=\"open_icon\" onClick={openForm} class=\"fas fa-plus\"></i>\r\n        </div>\r\n        <form id=\"input_form\" action=\"\">\r\n          <textarea id=\"input_area\" type=\"text\" />\r\n          <input type=\"submit\" onClick={postData} />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BioOfCells;\r\n","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\content_components\\bio_of_cells\\BioOfCellsIndex.jsx",["103"],"import React from \"react\";\r\nimport BioOfCellsNotes from \"./BioOfCellsNotes\";\r\n\r\nconst BioOfCellsIndex = (props) => {\r\n  function click_notes() {\r\n    let notes_h2 = document.getElementById(\"notes_h2\");\r\n    if (notes_h2.title === \"unclicked\") {\r\n      notes_h2.title = \"clicked\";\r\n      document.documentElement.style.setProperty(\"--blue\", \"#1877f2\");\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      id=\"horizontal_nav_div\"\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-evenly\",\r\n        margin: \"0 auto\",\r\n        overflow: \"hidden\",\r\n        backgroundColor: \"var(--gray_for_read)\",\r\n        boxShadow: \"0 -1px 3px black\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <h2 title=\"unclicked\" onClick={click_notes} id=\"notes_h2\">\r\n        notes\r\n      </h2>\r\n      <hr />\r\n      <h2 title=\"unclicked\" id=\"terminology_h2\">\r\n        terminology\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BioOfCellsIndex;\r\n","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\content_components\\human_devgen\\HumanDevGenIndex.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\content_components\\biochem_molbio\\BiochemMolbioIndex.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\content_components\\home_content\\HomeContent.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\MenuAside.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\TodoAside.jsx",["104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":5,"column":3,"nodeType":"111","messageId":"112","endLine":5,"endColumn":11},{"ruleId":"109","severity":1,"message":"113","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"114","line":1,"column":28,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"115","line":1,"column":8,"nodeType":"111","messageId":"112","endLine":1,"endColumn":21},{"ruleId":"109","severity":1,"message":"116","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":18},{"ruleId":"109","severity":1,"message":"117","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":19},{"ruleId":"109","severity":1,"message":"118","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":31,"column":46,"nodeType":"121","messageId":"122","endLine":32,"endColumn":75},{"ruleId":"119","severity":1,"message":"120","line":34,"column":48,"nodeType":"121","messageId":"122","endLine":35,"endColumn":79},{"ruleId":"123","severity":1,"message":"124","line":152,"column":6,"nodeType":"125","endLine":152,"endColumn":15,"suggestions":"126"},{"ruleId":"119","severity":1,"message":"120","line":30,"column":46,"nodeType":"121","messageId":"122","endLine":31,"endColumn":75},{"ruleId":"119","severity":1,"message":"120","line":33,"column":48,"nodeType":"121","messageId":"122","endLine":34,"endColumn":79},{"ruleId":"123","severity":1,"message":"124","line":151,"column":6,"nodeType":"125","endLine":151,"endColumn":15,"suggestions":"127"},{"ruleId":"119","severity":1,"message":"120","line":32,"column":46,"nodeType":"121","messageId":"122","endLine":33,"endColumn":74},{"ruleId":"119","severity":1,"message":"120","line":35,"column":48,"nodeType":"121","messageId":"122","endLine":36,"endColumn":79},{"ruleId":"123","severity":1,"message":"128","line":156,"column":6,"nodeType":"125","endLine":156,"endColumn":15,"suggestions":"129"},{"ruleId":"109","severity":1,"message":"130","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":23},{"ruleId":"123","severity":1,"message":"128","line":201,"column":6,"nodeType":"125","endLine":201,"endColumn":15,"suggestions":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'BiochemMolbio' is defined but never used.","'BioOfCells' is defined but never used.","'HumanDevGen' is defined but never used.","'HomeContent' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["134"],["135"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["136"],"'BioOfCellsNotes' is defined but never used.",["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"138","fix":"140"},{"desc":"141","fix":"142"},{"desc":"141","fix":"143"},"Update the dependencies array to be: [counter, fetchData]",{"range":"144","text":"145"},{"range":"146","text":"145"},"Update the dependencies array to be: [counter, getData]",{"range":"147","text":"148"},{"range":"149","text":"148"},[5484,5493],"[counter, fetchData]",[5472,5481],[5795,5804],"[counter, getData]",[7350,7359]]