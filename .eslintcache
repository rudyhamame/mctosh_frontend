[{"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\index.js":"1","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\Home\\Home.jsx":"2","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\AppRouter.js":"3","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\Profile\\Profile.jsx":"4","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\App.js":"5","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\Login\\Login.jsx":"6","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Header.jsx":"7","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Footer\\Footer.jsx":"8","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Logo\\Logo.jsx":"9","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Nav\\Nav.jsx":"10","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Posts\\Posts.jsx":"11","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Friends\\Friends.jsx":"12","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Nav\\Menu\\Menu.jsx":"13","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Main.jsx":"14","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Friends\\Chat\\Chat.jsx":"15","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Friends\\DropHorizontally.jsx":"16","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Posts\\MountPosts\\MountPosts.jsx":"17","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Posts\\InputPost\\InputPost.jsx":"18","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Search\\Search.jsx":"19","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Nav\\Logout\\Logout.jsx":"20","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Nav\\Notifications\\Notifications.jsx":"21","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Friends\\AddFriend\\AddFriend.jsx":"22","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Friends\\FriendsList\\FriendsList.jsx":"23","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Nav\\Dim\\Dim.jsx":"24","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Nav\\MessengerIcon\\MessengerIcon.jsx":"25"},{"size":430,"mtime":1613234364800,"results":"26","hashOfConfig":"27"},{"size":363,"mtime":1612367000778,"results":"28","hashOfConfig":"27"},{"size":420,"mtime":1613471390054,"results":"29","hashOfConfig":"27"},{"size":205,"mtime":1612367886471,"results":"30","hashOfConfig":"27"},{"size":22460,"mtime":1613473770904,"results":"31","hashOfConfig":"27"},{"size":11356,"mtime":1613468566724,"results":"32","hashOfConfig":"27"},{"size":695,"mtime":1613473714389,"results":"33","hashOfConfig":"27"},{"size":267,"mtime":1613231094488,"results":"34","hashOfConfig":"27"},{"size":259,"mtime":1613462899987,"results":"35","hashOfConfig":"27"},{"size":819,"mtime":1613474516149,"results":"36","hashOfConfig":"27"},{"size":417,"mtime":1613269186223,"results":"37","hashOfConfig":"27"},{"size":2388,"mtime":1613474901837,"results":"38","hashOfConfig":"27"},{"size":1959,"mtime":1613467100685,"results":"39","hashOfConfig":"27"},{"size":1398,"mtime":1613474955958,"results":"40","hashOfConfig":"27"},{"size":2148,"mtime":1613475159016,"results":"41","hashOfConfig":"27"},{"size":2263,"mtime":1613295474568,"results":"42","hashOfConfig":"27"},{"size":284,"mtime":1613390350230,"results":"43","hashOfConfig":"27"},{"size":4022,"mtime":1613269584864,"results":"44","hashOfConfig":"27"},{"size":1536,"mtime":1613207789706,"results":"45","hashOfConfig":"27"},{"size":277,"mtime":1613468201430,"results":"46","hashOfConfig":"27"},{"size":1658,"mtime":1613237490819,"results":"47","hashOfConfig":"27"},{"size":663,"mtime":1613267883077,"results":"48","hashOfConfig":"27"},{"size":401,"mtime":1613136846176,"results":"49","hashOfConfig":"27"},{"size":818,"mtime":1613467302494,"results":"50","hashOfConfig":"27"},{"size":297,"mtime":1613469193411,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"9ud5aj",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\index.js",[],["110","111"],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\Home\\Home.jsx",["112","113"],"import React from \"react\";\r\nimport Footer from \"../Footer\";\r\nimport Header from \"../Header\";\r\nimport Main from \"../Main\";\r\n\r\n//........Home Component...........\r\nconst Home = (props) => {\r\n  return (\r\n    <div id=\"app_page\" className=\"fc\">\r\n      <Main state={props.state} fetchData={props.fetchData} page=\"home\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n",["114","115"],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\AppRouter.js",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\static_components\\Profile\\Profile.jsx",["116"],"import React from \"react\";\r\n\r\nimport Main from \"../Main\";\r\n\r\n//........Home Component...........\r\nconst Home = (props) => {\r\n  return <div id=\"app_page\" className=\"fc\"></div>;\r\n};\r\n\r\nexport default Home;\r\n",["117","118"],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\App.js",["119","120"],"//...........import..................\r\nimport React from \"react\";\r\n// import { Route } from \"react-router-dom\";\r\nimport Footer from \"./Footer/Footer\";\r\nimport Header from \"./Header/Header\";\r\nimport Main from \"./Main/Main\";\r\n\r\n//........import CSS...........\r\nimport \"./App.css\";\r\nimport \"./Footer/footer.css\";\r\nimport \"./Header/header.css\";\r\nimport \"./Main/Friends/AddFriend/add_friend.css\";\r\nimport \"./Main/Posts/posts.css\";\r\nimport \"./Main/main.css\";\r\nimport \"./Main/Friends/friends.css\";\r\nimport \"./Header/Search/search.css\";\r\nimport \"./Header/Logo/logo.css\";\r\nimport \"./Header/Nav/Notifications/notifications.css\";\r\nimport \"./Header/Nav/nav.css\";\r\nimport \"./Main/Posts/InputPost/inputPosts.css\";\r\nimport \"./Main/Posts/MountPosts/mount_posts.css\";\r\nimport \"./Header/Nav/Menu/menu.css\";\r\nimport \"./Main/Friends/FriendsList/friendslist.css\";\r\nimport \"./Main/Friends/Chat/chat.css\";\r\n//...........component..................\r\nclass App extends React.Component {\r\n  //..........states...........\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      my_id: JSON.parse(sessionStorage.getItem(\"state\")).my_id,\r\n      username: JSON.parse(sessionStorage.getItem(\"state\")).username,\r\n      firstname: JSON.parse(sessionStorage.getItem(\"state\")).firstname,\r\n      lastname: JSON.parse(sessionStorage.getItem(\"state\")).lastname,\r\n      dob: JSON.parse(sessionStorage.getItem(\"state\")).dob,\r\n      token: JSON.parse(sessionStorage.getItem(\"state\")).token,\r\n      isConnected: JSON.parse(sessionStorage.getItem(\"state\")).isConnected,\r\n      notes: JSON.parse(sessionStorage.getItem(\"state\")).notes,\r\n      chat: null,\r\n      friends: JSON.parse(sessionStorage.getItem(\"state\")).friends,\r\n      friend_requests: JSON.parse(sessionStorage.getItem(\"state\"))\r\n        .friend_requests,\r\n      app_is_loading: false,\r\n      friend_target: null,\r\n      notifications: JSON.parse(sessionStorage.getItem(\"state\")).notifications,\r\n      server_answer: null,\r\n      friendID_selected: null,\r\n    };\r\n  }\r\n  ////////////////////////////////////////Variables//////////////\r\n  selected_friend_old_conversation = [];\r\n\r\n  /////////////////////////////////////////////////////Lifecycle//////////////////////////\r\n  componentDidMount() {\r\n    ///////////////////\r\n    // let source = new EventSource(\"URL\");\r\n    // source.onmessage = function (event) {\r\n    //   event.data;\r\n    // };\r\n    /////////////////\r\n    console.log(this.state);\r\n    this.dbUpdate_user_connected();\r\n    this.setState({\r\n      my_id: JSON.parse(sessionStorage.getItem(\"state\")).my_id,\r\n      username: JSON.parse(sessionStorage.getItem(\"state\")).username,\r\n      firstname: JSON.parse(sessionStorage.getItem(\"state\")).firstname,\r\n      lastname: JSON.parse(sessionStorage.getItem(\"state\")).lastname,\r\n      dob: JSON.parse(sessionStorage.getItem(\"state\")).dob,\r\n      token: JSON.parse(sessionStorage.getItem(\"state\")).token,\r\n      isConnected: JSON.parse(sessionStorage.getItem(\"state\")).isConnected,\r\n      notes: JSON.parse(sessionStorage.getItem(\"state\")).notes,\r\n      friends: JSON.parse(sessionStorage.getItem(\"state\")).friends,\r\n      friend_requests: JSON.parse(sessionStorage.getItem(\"state\"))\r\n        .friend_requests,\r\n      app_is_loading: false,\r\n      friend_target: null,\r\n      notifications: JSON.parse(sessionStorage.getItem(\"state\")).notifications,\r\n    });\r\n    setInterval(() => {\r\n      this.updateUserInfo();\r\n    }, 1000);\r\n  }\r\n  componentDidUpdate() {\r\n    console.log(this.state);\r\n\r\n    if (this.state.isConnected === false) {\r\n      this.dbUpdate_user_connected();\r\n    }\r\n    this.RetrievingMySendingMessages();\r\n  }\r\n\r\n  //////////////////////////RECEIVE MESSAGE////////////////////////////////\r\n  messages = [];\r\n  RetrievingMySendingMessages = () => {\r\n    if (this.state.chat) {\r\n      let ul = document.getElementById(\"Chat_messages\");\r\n      for (var i = 0; i < this.state.chat.conversation.length; i++) {\r\n        if (\r\n          this.state.chat.conversation[i]._id === this.state.friendID_selected\r\n        ) {\r\n          if (this.state.chat.conversation[i].message !== this.messages[i]) {\r\n            console.log(this.state.chat.conversation[i].message);\r\n            document\r\n              .getElementById(\"Chat_fetching_area\")\r\n              .scrollBy(\r\n                0,\r\n                document.getElementById(\"Chat_fetching_area\").scrollHeight\r\n              );\r\n\r\n            if (this.state.chat.conversation[i].destination === \"sent\") {\r\n              let p = document.createElement(\"p\");\r\n              let li = document.createElement(\"li\");\r\n              let div = document.createElement(\"div\");\r\n              p.textContent = this.state.chat.conversation[i].message;\r\n              li.setAttribute(\"class\", \"sentMessagesLI\");\r\n              li.appendChild(p);\r\n              div.setAttribute(\"class\", \"sentMessagesDIV fc\");\r\n              div.appendChild(li);\r\n              ul.appendChild(div);\r\n            }\r\n            if (this.state.chat.conversation[i].destination === \"received\") {\r\n              let p = document.createElement(\"p\");\r\n              let li = document.createElement(\"li\");\r\n              let div = document.createElement(\"div\");\r\n              p.textContent = this.state.chat.conversation[i].message;\r\n              li.setAttribute(\"class\", \"receivedMessagesLI\");\r\n              li.appendChild(p);\r\n              div.setAttribute(\"class\", \"receivedMessagesDIV fc\");\r\n              div.appendChild(li);\r\n              ul.appendChild(div);\r\n            }\r\n            this.messages[i] = this.state.chat.conversation[i].message;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //////////////////////////SEND MESSAGE TO FRIEND'S Chat////////////////////////////////\r\n  sendToMeMessage = () => {\r\n    let url =\r\n      \"https://backendstep1.herokuapp.com/api/chat/sendToMe/\" +\r\n      this.state.my_id;\r\n    let options = {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + this.state.token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        _id: this.state.friendID_selected,\r\n        message: document.getElementById(\"Chat_textarea_input\").value,\r\n        destination: \"sent\",\r\n      }),\r\n    };\r\n    let req = new Request(url, options);\r\n    fetch(req).then((result) => {\r\n      if (result.status === 201) {\r\n        document.getElementById(\"Chat_textarea_input\").value = \"\";\r\n      }\r\n    });\r\n  };\r\n  //////////////////////////SEND MESSAGE TO FRIEND'S Chat////////////////////////////////\r\n  sendToThemMessage = () => {\r\n    let url =\r\n      \"https://backendstep1.herokuapp.com/api/chat/sendToFriend/\" +\r\n      this.state.friendID_selected;\r\n    let options = {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + this.state.token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        _id: this.state.my_id,\r\n        message: document.getElementById(\"Chat_textarea_input\").value,\r\n        destination: \"received\",\r\n      }),\r\n    };\r\n    let req = new Request(url, options);\r\n    fetch(req).then((result) => {\r\n      if (result.status === 201) {\r\n        document.getElementById(\"Chat_textarea_input\").value = \"\";\r\n      }\r\n    });\r\n  };\r\n  ////////////////////////ACCEPT FRIEND/////////////////////////////////////////////\r\n\r\n  acceptFriend = (friend) => {\r\n    document.getElementById(friend.id).style.backgroundColor = \"var(--black)\";\r\n    document.getElementById(\"server_answer_message\").textContent = \"Adding ...\";\r\n    document.getElementById(\"server_answer\").style.width = \"20%\";\r\n    let url =\r\n      \"https://backendstep1.herokuapp.com/api/user/acceptFriend/\" +\r\n      this.state.my_id +\r\n      \"/\" +\r\n      friend.id;\r\n    let options = {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + this.state.token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    let req = new Request(url, options);\r\n    fetch(req).then((response) => {\r\n      if (response.status === 201) {\r\n        document.getElementById(\"server_answer_message\").textContent =\r\n          \"You're now friends!\";\r\n\r\n        let url =\r\n          \"https://backendstep1.herokuapp.com/api/user/editUserInfo/\" +\r\n          this.state.my_id +\r\n          \"/\" +\r\n          friend.id;\r\n        let options = {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + this.state.token,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        };\r\n        let req = new Request(url, options);\r\n        fetch(req).then((response) => {\r\n          if (response.ok) {\r\n            setTimeout(() => {\r\n              document.getElementById(\"server_answer\").style.width = \"0\";\r\n              document.getElementById(\"server_answer_message\").textContent = \"\";\r\n            }, 3000);\r\n            document.getElementById(friend.id).parentElement.style.display =\r\n              \"none\";\r\n          }\r\n          console.log(response.json());\r\n        });\r\n      }\r\n      if (response.status === 409) {\r\n        document.getElementById(\"server_answer_message\").textContent =\r\n          \"You're already friends!\";\r\n        setTimeout(() => {\r\n          document.getElementById(\"server_answer\").style.width = \"0\";\r\n          document.getElementById(\"server_answer_message\").textContent = \"\";\r\n        }, 3000);\r\n        document.getElementById(friend.id).parentElement.style.display = \"none\";\r\n      }\r\n    });\r\n  };\r\n  ////////////////////////Decline Request/////////////////////////////////////////////\r\n\r\n  makeNotificationsRead = (friend) => {\r\n    let url =\r\n      \"https://backendstep1.herokuapp.com/api/user/editUserInfo/\" +\r\n      this.state.my_id +\r\n      \"/\" +\r\n      friend.id;\r\n\r\n    let options = {\r\n      method: \"PUT\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + this.state.token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    let req = new Request(url, options);\r\n    fetch(req).then((response) => {\r\n      document.getElementById(friend.id).style.backgroundColor = \"var(--black)\";\r\n      if (response.status === 200) {\r\n        document.getElementById(friend.id).parentElement.style.display = \"none\";\r\n        document.getElementById(\"server_answer\").style.width = \"20%\";\r\n        document.getElementById(\"server_answer_message\").textContent = \"Done!\";\r\n        setTimeout(() => {\r\n          document.getElementById(\"server_answer\").style.width = \"0\";\r\n          document.getElementById(\"server_answer_message\").textContent = \"\";\r\n        }, 3000);\r\n      }\r\n    });\r\n  };\r\n  ////////////////////////ADD FRIEND/////////////////////////////////////////////\r\n\r\n  addFriend = (friend_username) => {\r\n    let url =\r\n      \"https://backendstep1.herokuapp.com/api/user/addFriend/\" +\r\n      friend_username;\r\n    let options = {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + this.state.token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id: this.state.my_id,\r\n        message:\r\n          this.state.firstname +\r\n          \" \" +\r\n          this.state.lastname +\r\n          \" wants to add you as a friend\",\r\n      }),\r\n    };\r\n    let req = new Request(url, options);\r\n    fetch(req).then((response) => {\r\n      if (response.status === 201) {\r\n        return response.json().then((result) => {\r\n          document.getElementById(\"server_answer\").style.width = \"20%\";\r\n          document.getElementById(\"server_answer_message\").textContent =\r\n            result.message;\r\n          setTimeout(() => {\r\n            document.getElementById(\"server_answer\").style.width = \"0\";\r\n            document.getElementById(\"server_answer_message\").textContent = \"\";\r\n          }, 3000);\r\n        });\r\n      } else {\r\n        document.getElementById(\"server_answer\").style.width = \"20%\";\r\n        document.getElementById(\"server_answer_message\").textContent =\r\n          \"Request failed\";\r\n        setTimeout(() => {\r\n          document.getElementById(\"server_answer\").style.width = \"0\";\r\n          document.getElementById(\"server_answer_message\").textContent = \"\";\r\n        }, 3000);\r\n      }\r\n    });\r\n  };\r\n  ////////////////////////SEARCH USER\r\n  searchUsers = (user_target) => {\r\n    let url =\r\n      \"https://backendstep1.herokuapp.com/api/user/searchUsers/\" + user_target;\r\n    let options = {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n    };\r\n    let req = new Request(url, options);\r\n    fetch(req)\r\n      .then((results) => {\r\n        return results.json(results);\r\n      })\r\n      .then((users) => {\r\n        for (var i = 0; i < users.length; i++) {\r\n          if (users[i]._id !== this.state.my_id) {\r\n            let p = document.createElement(\"p\");\r\n            let li = document.createElement(\"li\");\r\n            let ul = document.getElementById(\"AddFriend_addFriend_results\");\r\n            let icon = document.createElement(\"i\");\r\n            p.textContent =\r\n              users[i].info.firstname + \" \" + users[i].info.lastname;\r\n            li.appendChild(p);\r\n            li.setAttribute(\"id\", users[i].info.username);\r\n            li.setAttribute(\"class\", \"fr\");\r\n            if (this.state.friends > 0) {\r\n              this.state.friends.forEach((friend) => {\r\n                if (users[i]._id !== friend._id) {\r\n                  icon.setAttribute(\"class\", \" fas fa-user-plus\");\r\n                  icon.addEventListener(\"click\", () => {\r\n                    this.addFriend(li.id);\r\n                  });\r\n                  li.appendChild(icon);\r\n                }\r\n                if (users[i]._id === friend._id) {\r\n                  let p = document.createElement(\"p\");\r\n                  p.textContent = \"Already friends\";\r\n                  p.style.fontSize = \"11pt\";\r\n                  li.appendChild(p);\r\n                }\r\n              });\r\n            } else {\r\n              icon.setAttribute(\"class\", \" fas fa-user-plus\");\r\n              icon.addEventListener(\"click\", () => {\r\n                this.addFriend(li.id);\r\n              });\r\n              li.appendChild(icon);\r\n            }\r\n            ul.appendChild(li);\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //////////////////////////////BUILD FRIENDS LIST////////////////\r\n  app_friends = [];\r\n\r\n  buildFriendsList = () => {\r\n    for (var i = 0; i < this.state.friends.length; i++) {\r\n      //For every friend\r\n      if (this.app_friends[i] !== this.state.friends[i]._id) {\r\n        //If a friend is new to the app add it to the friends list with respect to the online status and to the app memory\r\n        this.app_friends[i] = this.state.friends[i]._id;\r\n        let p = document.createElement(\"p\");\r\n        let li = document.createElement(\"li\");\r\n        let ul = document.getElementById(\"FriendsList_friends_list\");\r\n        let icon = document.createElement(\"i\");\r\n        console.log(this.app_friends.length);\r\n\r\n        p.textContent =\r\n          this.state.friends[i].info.firstname +\r\n          \" \" +\r\n          this.state.friends[i].info.lastname;\r\n        p.setAttribute(\"id\", [i]);\r\n        li.appendChild(p);\r\n        li.setAttribute(\"id\", this.state.friends[i]._id);\r\n        li.addEventListener(\"click\", () => {\r\n          this.get_current_friend_chat_id(li.id);\r\n        });\r\n        li.setAttribute(\"class\", \"fr\");\r\n        li.setAttribute(\"title\", this.state.friends[i].info.firstname);\r\n        icon.setAttribute(\"id\", \"online_icon\" + this.state.friends[i]._id);\r\n        icon.setAttribute(\"class\", \"fas fa-circle\");\r\n        li.appendChild(icon);\r\n        ul.appendChild(li);\r\n        if (this.state.friends[i].status.isConnected) {\r\n          icon.style.color = \"#32cd32\";\r\n        } else {\r\n          icon.style.color = \"var(--black)\";\r\n        }\r\n      }\r\n      if (this.app_friends[i] === this.state.friends[i]._id) {\r\n        // if we already have this friend in the memory app just check their online status and change it\r\n        if (this.state.friends[i].status.isConnected) {\r\n          document.getElementById(\r\n            \"online_icon\" + this.state.friends[i]._id\r\n          ).style.color = \"#32cd32\";\r\n        } else {\r\n          document.getElementById(\r\n            \"online_icon\" + this.state.friends[i]._id\r\n          ).style.color = \"var(--black)\";\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  ////////////////////////////Select friend id to chat //////////////////////////////////////////////////\r\n  get_current_friend_chat_id = (friendID) => {\r\n    this.setState({\r\n      friendID_selected: friendID,\r\n    });\r\n    document.getElementById(\"Chat_goback_icon\").style.display = \"inline\";\r\n    document.getElementById(\"Chat_article\").style.height = \"100%\";\r\n    document.getElementById(\"FriendsList_article\").style.height = \"0\";\r\n    document.getElementById(\r\n      \"Chat_title_text\"\r\n    ).textContent = document.getElementById(friendID).title;\r\n  };\r\n  ////////////////////////////Update State//////////DONE/////////////////////\r\n  updateUserInfo = () => {\r\n    let url =\r\n      \"https://backendstep1.herokuapp.com/api/user/update/\" + this.state.my_id;\r\n    let req = new Request(url, {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + this.state.token,\r\n      },\r\n    });\r\n    fetch(req)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json(response);\r\n        }\r\n      })\r\n      .then((jsonData) => {\r\n        this.setState({\r\n          notes: jsonData.notes,\r\n          friends: jsonData.friends,\r\n          friend_requests: jsonData.friend_requests,\r\n          chat: jsonData.chat,\r\n          notifications: jsonData.notifications,\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.buildFriendsList();\r\n        this.buildNotifications();\r\n      })\r\n      .catch((err) => {\r\n        if (err.message === \"Cannot read property 'credentials' of null\")\r\n          console.log(\"Error\", err.message);\r\n      });\r\n  };\r\n\r\n  ////////////////////////////////////BUILD NOTIFICATIONS////////////////////////\r\n  buildNotifications = () => {\r\n    let notificaitons_array = [];\r\n    let ul = document.getElementById(\"Notifications_dropMenu_container\");\r\n    this.state.notifications.forEach((notification) => {\r\n      if (notification.status !== \"read\") {\r\n        document.getElementById(\"i_bell_open\").style.color = \"yellow\";\r\n        document.getElementById(\"i_bell_close\").style.color = \"yellow\";\r\n        ul.innerHTML = \"\";\r\n\r\n        let p = document.createElement(\"p\");\r\n        let li = document.createElement(\"li\");\r\n        let div = document.createElement(\"div\");\r\n        let decline_icon = document.createElement(\"i\");\r\n        let accept_icon = document.createElement(\"i\");\r\n\r\n        accept_icon.addEventListener(\"click\", () => {\r\n          this.acceptFriend(notification);\r\n        });\r\n        decline_icon.addEventListener(\"click\", () => {\r\n          this.makeNotificationsRead(notification);\r\n        });\r\n        decline_icon.setAttribute(\"class\", \"fas fa-times\");\r\n        accept_icon.setAttribute(\"class\", \"fas fa-user-check\");\r\n        accept_icon.setAttribute(\"id\", \"accept_icon\" + notification.id);\r\n        decline_icon.setAttribute(\"id\", \"decline_icon\" + notification.id);\r\n\r\n        p.textContent = notification.message;\r\n        div.setAttribute(\"class\", \"fr\");\r\n        div.style.justifyContent = \"space-between\";\r\n        li.setAttribute(\"id\", notification.id);\r\n        li.appendChild(p);\r\n        div.appendChild(li);\r\n        div.appendChild(decline_icon);\r\n        div.appendChild(accept_icon);\r\n        ul.appendChild(div);\r\n        notificaitons_array.push(notification);\r\n      } else {\r\n        document.getElementById(\"i_bell_open\").style.color = \"var(--white)\";\r\n        document.getElementById(\"i_bell_close\").style.color = \"var(--white)\";\r\n      }\r\n    });\r\n  };\r\n\r\n  ////////////////////////////////////////////////////UPDATE isConnect on databae////////////////////////////////\r\n  dbUpdate_user_connected = () => {\r\n    let url =\r\n      \"https://backendstep1.herokuapp.com/api/user/connection/\" +\r\n      this.state.my_id;\r\n    let options = {\r\n      method: \"PUT\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        \"status.isConnected\": this.state.isConnected,\r\n      }),\r\n    };\r\n\r\n    let req = new Request(url, options);\r\n    fetch(req)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          if (this.state.isConnected === false) {\r\n            sessionStorage.removeItem(\"state\");\r\n            window.location.reload();\r\n          }\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"bad Http\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error:\", err.message);\r\n      });\r\n  };\r\n\r\n  //.....loader function..........\r\n  loader = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          fontSize: \"20pt\",\r\n          display: \"flex\",\r\n          position: \"fixed\",\r\n          top: \"0\",\r\n          bottom: \"0\",\r\n\r\n          justifyContent: \"center\",\r\n          alignContent: \"center\",\r\n          flexDirection: \"column\",\r\n          zIndex: \"100\",\r\n        }}\r\n      >\r\n        <img src=\"/img/loader.gif\" alt=\"\" width=\"70px\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /////////////////////////Log out//////////////////////\r\n  logOut = () => {\r\n    this.setState({\r\n      isConnected: false,\r\n    });\r\n  };\r\n\r\n  //.....Reander Login HTML..........\r\n  render() {\r\n    return (\r\n      <div id=\"app_page\" className=\"fc\">\r\n        <Header\r\n          state={this.state}\r\n          logOut={this.logOut}\r\n          acceptFriend={this.acceptFriend}\r\n          type={this.props.type}\r\n        />\r\n        <Main\r\n          searchUsers={this.searchUsers}\r\n          addFriend={this.addFriend}\r\n          acceptFriend={this.acceptFriend}\r\n          state={this.state}\r\n          sendToMeMessage={this.sendToMeMessage}\r\n          sendToThemMessage={this.sendToThemMessage}\r\n          RetrievingMySendingMessages={this.RetrievingMySendingMessages}\r\n          type={this.props.type}\r\n        />\r\n        <Footer />\r\n        <div\r\n          id=\"server_answer\"\r\n          onClick={() => {\r\n            document.getElementById(\"server_answer\").style.width = \"0\";\r\n          }}\r\n        >\r\n          <h3 id=\"server_answer_message\"></h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\Login\\Login.jsx",["121"],"import React, { useState } from \"react\";\r\nimport AppRouter from \"../AppRouter\";\r\nimport \"../Login/login.css\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Login = () => {\r\n  //.........................STATE.....................................//\r\n  const [is_loading, setIs_loading] = useState(null);\r\n  const [signup_ok, setSignup_ok] = useState(null);\r\n  const [login_ok, setLogin_ok] = useState(null);\r\n  const [authReport, setAuthReport] = useState(null);\r\n\r\n  React.useEffect(() => {\r\n    if (login_ok && authReport) {\r\n      login_listener();\r\n      sessionStorage.setItem(\"state\", JSON.stringify(authReport));\r\n    }\r\n  });\r\n  // //.................................Declaration......................//\r\n\r\n  //.........................formControl & formControl (functions)..........................//\r\n\r\n  const formControl = (text) => {\r\n    let Login_firstname_input = document.getElementById(\r\n      \"Login_firstname_input\"\r\n    );\r\n    let Login_lastname_input = document.getElementById(\"Login_lastname_input\");\r\n    let Login_email_input = document.getElementById(\"Login_email_input\");\r\n    let Login_dob_input = document.getElementById(\"Login_dob_input\");\r\n    let Login_signup_button = document.getElementById(\"Login_signup_button\");\r\n    let Login_login_button = document.getElementById(\"Login_login_button\");\r\n    let Login_loginShow_text = document.getElementById(\"Login_loginShow_text\");\r\n    let Login_signupShow_text = document.getElementById(\r\n      \"Login_signupShow_text\"\r\n    );\r\n    switch (text) {\r\n      case \"signup\":\r\n        Login_firstname_input.style.display = \"initial\";\r\n        Login_lastname_input.style.display = \"initial\";\r\n        Login_email_input.style.display = \"initial\";\r\n        Login_dob_input.style.display = \"initial\";\r\n        Login_signup_button.style.display = \"initial\";\r\n        Login_login_button.style.display = \"none\";\r\n        Login_loginShow_text.style.display = \"initial\";\r\n        Login_signupShow_text.style.display = \"none\";\r\n        break;\r\n\r\n      case \"login\":\r\n        Login_signup_button.style.display = \"none\";\r\n        Login_signupShow_text.style.display = \"initial\";\r\n        Login_login_button.style.display = \"initial\";\r\n        Login_email_input.style.display = \"none\";\r\n        Login_dob_input.style.display = \"none\";\r\n        Login_loginShow_text.style.display = \"none\";\r\n        Login_firstname_input.style.display = \"none\";\r\n        Login_lastname_input.style.display = \"none\";\r\n        break;\r\n    }\r\n  };\r\n\r\n  ////////////////////////////////////////////CHECK AND GET CREDENTIALS//////////////////////////////////////\r\n  const login = (event) => {\r\n    event.preventDefault();\r\n    let Login_username_input = document.getElementById(\"Login_username_input\");\r\n    let Login_password_input = document.getElementById(\"Login_password_input\");\r\n    setIs_loading(true);\r\n    let url = \"https://backendstep1.herokuapp.com/api/user/login/\";\r\n    let req = new Request(url, {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        username: Login_username_input.value,\r\n        password: Login_password_input.value,\r\n      }),\r\n    });\r\n    fetch(req)\r\n      .then((response) => {\r\n        if (response.status === 201) {\r\n          setLogin_ok(true);\r\n          return response.json(response);\r\n        }\r\n        if (response.status === 401) {\r\n          setLogin_ok(false);\r\n          setIs_loading(false);\r\n          return response.json(response);\r\n        }\r\n      })\r\n      .then((userdata) => {\r\n        if (userdata.message === \"Login successful\") {\r\n          setAuthReport({\r\n            my_id: userdata.user._id,\r\n            username: userdata.user.info.username,\r\n            firstname: userdata.user.info.firstname,\r\n            lastname: userdata.user.info.lastname,\r\n            dob: userdata.user.info.dob,\r\n            token: userdata.token,\r\n            isConnected: true,\r\n            notes: userdata.user.notes,\r\n            friends: userdata.user.friends,\r\n            friend_requests: userdata.user.friend_requests,\r\n            notifications: userdata.user.notifications,\r\n          });\r\n\r\n          setLogin_ok(true);\r\n        } else {\r\n          setLogin_ok(false);\r\n          setIs_loading(false);\r\n        }\r\n      });\r\n  };\r\n  //..............................................................................................\r\n  /////////////////////////////////////////Login listener/////////////////////////////////////////\r\n  const login_listener = () => {\r\n    let app_page_width = parseInt(\r\n      window.getComputedStyle(document.querySelector(\"#root\")).width\r\n    );\r\n    if (authReport) {\r\n      document.getElementById(\"Login_loginFrom_form\").style.height = \"0\";\r\n      document.getElementById(\"Login_loginFrom_form\").style.padding = \"0\";\r\n      if (app_page_width > 1000) {\r\n        document.getElementById(\"Login_loginLogo_text\").style.fontSize =\r\n          \"100pt\";\r\n        document.getElementById(\r\n          \"Login_loginLogo_container\"\r\n        ).style.marginBottom = \"150px\";\r\n        document.getElementById(\"Login_subLoginLogo_text\").style.fontSize =\r\n          \"50pt\";\r\n      }\r\n      if (1000 > app_page_width > 700) {\r\n        document.getElementById(\"Login_loginLogo_text\").style.fontSize = \"90pt\";\r\n        document.getElementById(\r\n          \"Login_loginLogo_container\"\r\n        ).style.marginBottom = \"140px\";\r\n        document.getElementById(\"Login_subLoginLogo_text\").style.fontSize =\r\n          \"40pt\";\r\n      }\r\n      if (app_page_width < 700) {\r\n        document.getElementById(\"Login_loginLogo_text\").style.fontSize = \"70pt\";\r\n        document.getElementById(\r\n          \"Login_loginLogo_container\"\r\n        ).style.marginBottom = \"130px\";\r\n        document.getElementById(\"Login_subLoginLogo_text\").style.fontSize =\r\n          \"30pt\";\r\n      }\r\n\r\n      setTimeout(() => {\r\n        setIs_loading(false);\r\n        ReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\r\n      }, 5000);\r\n    }\r\n  };\r\n  //.............................................................................................................\r\n  ////////////////////////////////////////////SIGN UP AS USER AND PROFILE//////////////////////////////////////\r\n  const signup = (event) => {\r\n    event.preventDefault();\r\n    setIs_loading(true);\r\n    let Login_username_input = document.getElementById(\"Login_username_input\");\r\n    let Login_password_input = document.getElementById(\"Login_password_input\");\r\n    let Login_firstname_input = document.getElementById(\r\n      \"Login_firstname_input\"\r\n    );\r\n    let Login_lastname_input = document.getElementById(\"Login_lastname_input\");\r\n    let Login_email_input = document.getElementById(\"Login_email_input\");\r\n    let Login_dob_input = document.getElementById(\"Login_dob_input\");\r\n    //................................user....................................................\r\n    const url = \"https://backendstep1.herokuapp.com/api/user/signup\";\r\n    const options = {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        username: Login_username_input.value,\r\n        password: Login_password_input.value,\r\n        firstname: Login_firstname_input.value,\r\n        lastname: Login_lastname_input.value,\r\n        email: Login_email_input.value,\r\n        dob: Login_dob_input.value,\r\n      }),\r\n    };\r\n    let req = new Request(url, options);\r\n    fetch(req)\r\n      .then((response) => {\r\n        if (response.status === 201) {\r\n          document.getElementById(\"Login_loginFrom_form\").reset();\r\n          setIs_loading(false);\r\n          setSignup_ok(true);\r\n          document.getElementById(\"Login_loginFrom_form\").reset();\r\n          return response.json(response);\r\n        }\r\n        if (response.status === 409) {\r\n          setIs_loading(false);\r\n          setSignup_ok(false);\r\n          return response.json(response);\r\n        }\r\n        if (response.status === 500) {\r\n          setIs_loading(false);\r\n          setSignup_ok(false);\r\n          return response.json(response);\r\n        }\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error:\", err.message);\r\n      });\r\n  };\r\n\r\n  ////////////////////////////////////////////Create PROFILE//////////////////////////////////////\r\n\r\n  return (\r\n    <article id=\"Login_article\" className=\"fc\">\r\n      <main id=\"Login_main\" className=\"fc\">\r\n        <section id=\"Login_loginLogo_container\">\r\n          <h1 id=\"Login_loginLogo_text\">MED</h1>\r\n          <h4 id=\"Login_subLoginLogo_text\">study planner</h4>\r\n        </section>\r\n        <section id=\"Login_loginForm_container\">\r\n          <form id=\"Login_loginFrom_form\" className=\"fc\">\r\n            <input\r\n              id=\"Login_firstname_input\"\r\n              type=\"text\"\r\n              style={{ display: \"none\" }}\r\n              placeholder=\"first name\"\r\n            />\r\n            <input\r\n              id=\"Login_lastname_input\"\r\n              type=\"text\"\r\n              style={{ display: \"none\" }}\r\n              placeholder=\"last name\"\r\n            />\r\n            <input\r\n              id=\"Login_username_input\"\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n            />\r\n            <input\r\n              id=\"Login_password_input\"\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n            />\r\n            <input\r\n              id=\"Login_email_input\"\r\n              type=\"email\"\r\n              placeholder=\"email address\"\r\n              style={{ display: \"none\" }}\r\n            />\r\n            <input\r\n              id=\"Login_dob_input\"\r\n              type=\"date\"\r\n              placeholder=\"date of birth\"\r\n              style={{ display: \"none\" }}\r\n            />\r\n            <button id=\"Login_login_button\" onClick={login}>\r\n              Log in\r\n            </button>\r\n\r\n            <button\r\n              id=\"Login_signup_button\"\r\n              onClick={signup}\r\n              style={{ display: \"none\" }}\r\n            >\r\n              Sign up\r\n            </button>\r\n            <h4\r\n              style={{ display: \"none\" }}\r\n              id=\"Login_loginShow_text\"\r\n              onClick={() => formControl(\"login\")}\r\n            >\r\n              Log in?\r\n            </h4>\r\n            <h4\r\n              id=\"Login_signupShow_text\"\r\n              onClick={() => formControl(\"signup\")}\r\n            >\r\n              Sign up?\r\n            </h4>\r\n            <h4 style={{ overflowWrap: \"break-word\", color: \"red\" }}>\r\n              {login_ok === false &&\r\n                \"The password you entered is not correct, please try again\"}\r\n              {signup_ok && \"You have successfully signed up!\"}\r\n              {signup_ok === false &&\r\n                \"Please make sure you entered valid information\"}\r\n            </h4>\r\n          </form>\r\n        </section>\r\n      </main>\r\n      <footer id=\"Login_footer\">\r\n        <section id=\"Login_copyright_container\">\r\n          <h4 id=\"Login_copyright_text\">©2021 Rudy Hamame</h4>\r\n        </section>\r\n      </footer>\r\n      {is_loading === true && (\r\n        <div id=\"Login_loaderImg_div\" className=\"fc\">\r\n          <img src=\"/img/loader.gif\" alt=\"\" width=\"100px\" />\r\n        </div>\r\n      )}\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Header.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Footer\\Footer.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Logo\\Logo.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Nav\\Nav.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Posts\\Posts.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Friends\\Friends.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Nav\\Menu\\Menu.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Main.jsx",["122","123"],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Friends\\Chat\\Chat.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Friends\\DropHorizontally.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Posts\\MountPosts\\MountPosts.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Posts\\InputPost\\InputPost.jsx",["124"],"import React from \"react\";\r\n\r\nconst InputForm = (props) => {\r\n  ////////////////////////////////AUTO RESIZE TEXTAREA///////////////////////////////////\r\n  function auto_grow(event) {\r\n    let textarea = document.getElementById(\"InputPost_textarea\");\r\n    textarea.style.height = textarea.scrollHeight + \"px\";\r\n\r\n    if (event.which === 8) {\r\n      textarea.style.height = textarea.scrollHeight - 20 + \"px\";\r\n    }\r\n  }\r\n  function minimizeHeight() {\r\n    let textarea = document.getElementById(\"InputPost_textarea\");\r\n\r\n    if (textarea.value === \"\") {\r\n      textarea.style.height = 0 + \"px\";\r\n    }\r\n  }\r\n  return (\r\n    <article id=\"InputPost_article\" className=\"fc\">\r\n      <section className=\"fr\" id=\"InputPost_textarea_container\">\r\n        <section id=\"InputPost_greeting_container\" className=\"fc\">\r\n          <h1 id=\"InputPost_greeting_text\">Hello {props.state.firstname}</h1>\r\n        </section>\r\n        <textarea\r\n          id=\"InputPost_textarea\"\r\n          placeholder=\"Wants to post something?\"\r\n          onKeyDown={(event) => auto_grow(event)}\r\n          onChange={(event) => minimizeHeight(event)}\r\n        ></textarea>\r\n      </section>\r\n      <section className=\"InputPost_inputs_container\" className=\"fr\">\r\n        <select id=\"InputPost_category\" title=\"dsf\">\r\n          <option value=\"\" disabled selected hidden>\r\n            Category\r\n          </option>\r\n          <option value=\"General Principles\">General Principles</option>\r\n          <option value=\"Individual Organ\">Individual Organ</option>\r\n        </select>\r\n\r\n        <select id=\"InputPost_subject\" name=\"subject\">\r\n          <option value=\"\" disabled selected hidden>\r\n            Area\r\n          </option>\r\n          <option value=\"Pathology\">Pathology</option>\r\n          <option value=\"Physiology\">Physiology</option>\r\n          <option value=\"Pharmacology\">Pharmacology</option>\r\n          <option value=\"Biochemistry\">Biochemistry</option>\r\n          <option value=\"Nutrition\">Nutrition</option>\r\n          <option value=\"Microbiology\">Microbiology</option>\r\n          <option value=\"Immunology\">Immunology</option>\r\n          <option value=\"Gross Anatomy\">Gross Anatomy</option>\r\n          <option value=\"Embryology\">Embryology</option>\r\n          <option value=\"Histology\">Histology</option>\r\n          <option value=\"Cell Biology\">Cell Biology</option>\r\n          <option value=\"Behavioral Sciences\">Behavioral Sciences</option>\r\n          <option value=\"Genetics\">Genetics</option>\r\n        </select>\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"textbook\"\r\n          id=\"InputPost_resourse\"\r\n          placeholder=\"Resourse\"\r\n        />\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"page\"\r\n          id=\"InputPost_page\"\r\n          placeholder=\"Page Number\"\r\n        />\r\n        <button\r\n          id=\"InputPost_post_button\"\r\n          value=\"unclicked\"\r\n          onClick={() => {\r\n            props.fetchData({\r\n              url: \"http://localhost:4000/api/user/notes/\",\r\n              method: \"POST\",\r\n              body: {\r\n                text: document.getElementById(\"textarea_home_content\").value,\r\n                category: document.getElementById(\"input_category_notes\").value,\r\n                subject: document.getElementById(\"input_subject_notes\").value,\r\n                textbook: document.getElementById(\"input_textbook_notes\").value,\r\n                page: document.getElementById(\"input_page_notes\").value,\r\n                state: \"created\",\r\n              },\r\n              isFetching: props.setIsFetching,\r\n            });\r\n            document.getElementById(\"form_notes_dashboard\").style.display =\r\n              \"none\";\r\n            document.getElementById(\r\n              \"button_note_dashboard\"\r\n            ).style.backgroundColor = \"var(--blue)\";\r\n            document.getElementById(\"button_note_dashboard\").value =\r\n              \"unclicked\";\r\n          }}\r\n        >\r\n          post\r\n        </button>\r\n      </section>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n","C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Search\\Search.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Nav\\Logout\\Logout.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Nav\\Notifications\\Notifications.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Friends\\AddFriend\\AddFriend.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Main\\Friends\\FriendsList\\FriendsList.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Nav\\Dim\\Dim.jsx",[],"C:\\Users\\Rudy\\Documents\\step1\\step1-frontend2\\src\\App\\Header\\Nav\\MessengerIcon\\MessengerIcon.jsx",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":14},{"ruleId":"129","severity":1,"message":"133","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":14},{"ruleId":"125","replacedBy":"134"},{"ruleId":"127","replacedBy":"135"},{"ruleId":"129","severity":1,"message":"136","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":12},{"ruleId":"125","replacedBy":"137"},{"ruleId":"127","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":353,"column":42,"nodeType":"141","messageId":"142","endLine":367,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":615,"column":11,"nodeType":"145","endLine":615,"endColumn":42},{"ruleId":"146","severity":1,"message":"147","line":36,"column":5,"nodeType":"148","messageId":"149","endLine":58,"endColumn":6},{"ruleId":"129","severity":1,"message":"150","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":19},{"ruleId":"129","severity":1,"message":"151","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":12},{"ruleId":"152","severity":1,"message":"153","line":33,"column":55,"nodeType":"154","endLine":33,"endColumn":69},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.",["155"],["156"],"'Main' is defined but never used.",["155"],["156"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i', 'i'.","ArrowFunctionExpression","unsafeRefs","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'FriendsList' is defined but never used.","'Chat' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]